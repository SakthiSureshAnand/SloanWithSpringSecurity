/**
 * 
 * @author Geppetto Generated Code</br> Date Created: </br>
 * @since </br> build:
 *        </p>
 * 
 * code was generated by the Geppetto System </br> Geppetto system Copyright -
 * NewPortBay LLC </br> The generated code is free to use by anyone
 * </p>
 * 
 * 
 * 
 */

var app = angular.module('Sloan_test_1', [ 'ngRoute', 'ngCookies',
		'ui.bootstrap', 'ui.grid', 'ui.grid.pagination',
		'ui.grid.resizeColumns', 'ui.grid.edit','facebook' ]);

// configure our routes
app.config(function($routeProvider,FacebookProvider) {
	FacebookProvider.init('1619632164961533');
	
	$routeProvider.when('/First_time_setup-en', {
		templateUrl : 'app/views/en/First_time_setup-en.html',
		controller : 'First_time_setup'
	}).when('/en-US/campaigns', {
		templateUrl : 'app/views/en-US/user/campaigns.html',
		controller : 'CampaignController'
	}).when('/en-US/campaign/:action', {
		templateUrl : 'app/views/en-US/user/campaign.html',
		controller : 'CampaignController',
		allow:'ROLE_ADMIN,ROLE_USER'
	}).when('/en-US/login/', {
		templateUrl : 'app/views/en/login.html',
		controller:'LoginController'
	}).when('/en-US/signup/', {
		templateUrl : 'app/views/en/signup.html',
		controller:'SignUpController',
		allow:'ROLE_ADMIN,ROLE_USER'	
	}).when('/en-US/customer/',{
		templateUrl:'app/views/en/customer.html',
		controller:'CustomerController',
		allow:'ROLE_USER'
	}).when('/en-US/careGiver/',{
		templateUrl:'app/views/en/careGiver.html',
		controller:'CareGiverController',
		allow:'ROLE_ADMIN'
	}).when('/error404',{
		templateUrl:'app/views/en/errorPage.html'
	})
	.otherwise({
		templateUrl : 'app/views/en/First_time_setup-en.html',
		controller : 'First_time_setup'
	});

});



/**
 * start point for this application
 */
app.run([ "$log","$rootScope", "$location", function($log,$rootScope, $location) {
	$log.log("Starting Sloan Application");
	var self = this;
	self.isLoggedIn = true;
	$rootScope.userData={};
	//self.project = {};
	self.hasRole = function(role) {
		console.log("role in context service",role);
		if (!role) {
			return true;
		}
		var i= 0;
		console.log('$rootScope.userData',$rootScope.userData);
		console.log('$rootScope.userData.role',angular.equals({}, $rootScope.userData));
		if(!angular.equals({}, $rootScope.userData)){
		console.log('self.userData.role[0].authority',$rootScope.userData.role[0].authority);
		for ( var idx in $rootScope.userData.role[i].authority) {
			i++;
			var index = role
					.indexOf($rootScope.userData.role[idx].authority);
			$log.log("index: ", index);
			if (index >= 0) {
				return true;
			}
		}
	}	
		return false;
	};
	
	/**
	 * used to hold the current project informations
	 * 
	 */
	/**
	 * Checking whether user is authorized to view this page
	 * 
	 */
	
	/**
	 * Listening the root changes
	 */
	$rootScope.$on('$routeChangeStart', function(ev, next, current) {
		console.log('When the route changes happened');
		
		/**
		 * Not considering public pages
		 */
		if (next.hasRole) {
			alert("No role has been associated.. progressing..")
			$log.log("No role has been associated.. progressing..");
			return;
		}	
		
		
	if (!self.hasRole(next.allow)) {
		$log.log("user is unauthorized!");
		$log.log("Un authorized access!");
		console.log('self.hasRole(next.allow)',angular.toJson(self.hasRole(next.allow)));
		$location.path("/error404");
	}
});
		
	
	
}]);
	


